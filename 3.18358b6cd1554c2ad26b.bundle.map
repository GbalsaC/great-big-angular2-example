{"version":3,"sources":["webpack:///3.18358b6cd1554c2ad26b.chunk.js","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.ts","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.routing.ts","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/core/store/contact/contact.effects.ts","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.css","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.html","webpack:////Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.module.ts","webpack:////Users/Dan/work/bernierebuttals/gba/~/buffer/index.js?da93*","webpack:////Users/Dan/work/bernierebuttals/gba/~/rxjs/add/operator/withLatestFrom.js?50f3","webpack:////Users/Dan/work/bernierebuttals/gba/~/base64-js/index.js?8cb1*","webpack:////Users/Dan/work/bernierebuttals/gba/~/ieee754/index.js?92c1*","webpack:////Users/Dan/work/bernierebuttals/gba/~/isarray/index.js?0e2f*","webpack:////Users/Dan/work/bernierebuttals/gba/~/node-uuid/uuid.js?026b*"],"names":["webpackJsonp","1008","module","exports","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_let__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","n","__WEBPACK_IMPORTED_MODULE_2__ngrx_store__","__WEBPACK_IMPORTED_MODULE_3__core_store__","__WEBPACK_IMPORTED_MODULE_4__core_store_contact_contact_actions__","__WEBPACK_IMPORTED_MODULE_5__core_store_layout_layout_actions__","d","ContactPage","__decorate","this","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","uuid","store","prototype","ngOnInit","user$","let","msg$","contacts$","nextContact","dispatch","newContact","id","v1","name","onSubmit","_this","setTimeout","selector","changeDetection","OnPush","template","styles","_a","1027","__WEBPACK_IMPORTED_MODULE_0__angular_router__","__WEBPACK_IMPORTED_MODULE_1__contact_page__","routing","forChild","path","component","1032","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__ngrx_store__","__WEBPACK_IMPORTED_MODULE_2__ngrx_effects__","__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_switchMap__","__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_toArray__","__WEBPACK_IMPORTED_MODULE_9_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_filter__","__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_withLatestFrom__","__WEBPACK_IMPORTED_MODULE_12_rxjs_add_operator_startWith__","__WEBPACK_IMPORTED_MODULE_13__data_service__","__WEBPACK_IMPORTED_MODULE_14__contact_actions__","ContactEffects","dataService","action$","load$","ofType","LOAD","startWith","switchMap","getContacts","mergeMap","fetchedContacts","from","map","fetchedContact","catch","of","update$","UPDATE_CONTACT","ADD_CONTACT","withLatestFrom","select","contacts","ids","filter","entities","dirty","addOrUpdateContact","responseContact","_b","_c","1048","1055","986","__WEBPACK_IMPORTED_MODULE_1__ngrx_effects__","__WEBPACK_IMPORTED_MODULE_2__core_store_data_service__","__WEBPACK_IMPORTED_MODULE_3__shared_shared_module__","__WEBPACK_IMPORTED_MODULE_4__contact_page__","__WEBPACK_IMPORTED_MODULE_5__contact_routing__","__WEBPACK_IMPORTED_MODULE_6__core_store_contact_contact_effects__","ContactModule","imports","run","declarations","providers","992","Buffer","global","typedArraySupport","arr","Uint8Array","__proto__","foo","subarray","byteLength","e","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","Error","allocUnsafe","value","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","write","slice","fromArrayLike","array","byteOffset","obj","isBuffer","len","copy","buffer","isnan","type","isArray","data","toString","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","String","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","push","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","charCodeAt","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","equals","inspect","match","join","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","993","Observable_1","withLatestFrom_1","Observable","994","placeHoldersCount","b64","l","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","995","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","log","LN2","996","997","998","__WEBPACK_AMD_DEFINE_RESULT__","_window","setupBrowser","_crypto","crypto","msCrypto","_rng","getRandomValues","_rnds8","_whatwgRNG","_rnds","_mathRNG","random","console","warn","setupNode","_rb","randomBytes","_nodeRNG","parse","ii","oct","_hexToByte","unparse","bth","_byteToHex","options","clockseq","_clockseq","msecs","Date","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","v4","BufferClass","rnds","rng","_seedBytes","window"],"mappings":"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","file":"3.18358b6cd1554c2ad26b.chunk.js","sourcesContent":["webpackJsonp([3,9],{\n\n/***/ 1008:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_let__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_let___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_rxjs_add_operator_let__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngrx_store__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core_store__ = __webpack_require__(171);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__core_store_contact_contact_actions__ = __webpack_require__(278);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__core_store_layout_layout_actions__ = __webpack_require__(279);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return ContactPage; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\nvar uuid = __webpack_require__(998);\nvar ContactPage = (function () {\n    function ContactPage(store) {\n        this.store = store;\n    }\n    ContactPage.prototype.ngOnInit = function () {\n        this.user$ = this.store.let(__WEBPACK_IMPORTED_MODULE_3__core_store__[\"o\" /* getUser */]);\n        this.msg$ = this.store.let(__WEBPACK_IMPORTED_MODULE_3__core_store__[\"p\" /* getMsg */]);\n        this.contacts$ = this.store.let(__WEBPACK_IMPORTED_MODULE_3__core_store__[\"q\" /* getContacts */]);\n    };\n    ContactPage.prototype.nextContact = function () {\n        this.store.dispatch(new __WEBPACK_IMPORTED_MODULE_4__core_store_contact_contact_actions__[\"b\" /* NextContactAction */]());\n    };\n    ContactPage.prototype.newContact = function () {\n        this.store.dispatch(new __WEBPACK_IMPORTED_MODULE_4__core_store_contact_contact_actions__[\"c\" /* AddContactAction */]({\n            id: uuid.v1(),\n            name: ''\n        }));\n    };\n    ContactPage.prototype.onSubmit = function () {\n        var _this = this;\n        this.store.dispatch(new __WEBPACK_IMPORTED_MODULE_5__core_store_layout_layout_actions__[\"d\" /* SetMsgAction */]('Saved contact'));\n        setTimeout(function () { return _this.store.dispatch(new __WEBPACK_IMPORTED_MODULE_5__core_store_layout_layout_actions__[\"d\" /* SetMsgAction */](null)); });\n    };\n    ContactPage = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__angular_core__[\"Component\"])({\n            selector: 'app-contact',\n            changeDetection: __WEBPACK_IMPORTED_MODULE_1__angular_core__[\"ChangeDetectionStrategy\"].OnPush,\n            template: __webpack_require__(1055),\n            styles: [__webpack_require__(1048)]\n        }), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_2__ngrx_store__[\"b\" /* Store */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__ngrx_store__[\"b\" /* Store */]) === 'function' && _a) || Object])\n    ], ContactPage);\n    return ContactPage;\n    var _a;\n}());\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/ \n\n\n/***/ },\n\n/***/ 1027:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_router__ = __webpack_require__(99);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__contact_page__ = __webpack_require__(1008);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return routing; });\n\n\nvar routing = __WEBPACK_IMPORTED_MODULE_0__angular_router__[\"c\" /* RouterModule */].forChild([\n    { path: '', component: __WEBPACK_IMPORTED_MODULE_1__contact_page__[\"a\" /* ContactPage */] }\n]);\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/ \n\n\n/***/ },\n\n/***/ 1032:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngrx_store__ = __webpack_require__(44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__ngrx_effects__ = __webpack_require__(271);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__ = __webpack_require__(274);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_catch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__ = __webpack_require__(498);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_switchMap__ = __webpack_require__(172);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_switchMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_switchMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_mergeMap__ = __webpack_require__(496);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_add_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_toArray__ = __webpack_require__(497);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_toArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_rxjs_add_operator_toArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_add_operator_map__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_filter__ = __webpack_require__(275);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10_rxjs_add_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_withLatestFrom__ = __webpack_require__(993);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_withLatestFrom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_rxjs_add_operator_withLatestFrom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_add_operator_startWith__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_rxjs_add_operator_startWith___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_rxjs_add_operator_startWith__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__data_service__ = __webpack_require__(272);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__contact_actions__ = __webpack_require__(278);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"a\", function() { return ContactEffects; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ContactEffects = (function () {\n    function ContactEffects(store, dataService, action$) {\n        var _this = this;\n        this.store = store;\n        this.dataService = dataService;\n        this.action$ = action$;\n        this.load$ = this.action$\n            .ofType(__WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"a\" /* ActionTypes */].LOAD)\n            .startWith(new __WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"d\" /* LoadAction */]())\n            .switchMap(function () {\n            return _this.dataService.getContacts()\n                .mergeMap(function (fetchedContacts) { return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__[\"Observable\"].from(fetchedContacts); })\n                .map(function (fetchedContact) { return new __WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"e\" /* LoadSuccessAction */](fetchedContact); }) // one action per contact\n                .catch(function () { return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__[\"Observable\"].of(new __WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"f\" /* UpdateContactFailAction */]()); });\n        });\n        this.update$ = this.action$\n            .ofType(__WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"a\" /* ActionTypes */].UPDATE_CONTACT, __WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"a\" /* ActionTypes */].ADD_CONTACT)\n            .withLatestFrom(this.store.select('contacts'))\n            .switchMap(function (_a) {\n            var _b = _a[0], contacts = _a[1];\n            return __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__[\"Observable\"] // first element is action, but it isn't used\n                .from(contacts.ids)\n                .filter(function (id) { return contacts.entities[id].dirty; })\n                .switchMap(function (id) { return _this.dataService.addOrUpdateContact(contacts.entities[id]); })\n                .map(function (responseContact) { return new __WEBPACK_IMPORTED_MODULE_14__contact_actions__[\"g\" /* UpdateContactSuccessAction */](responseContact); });\n        });\n    }\n    __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ngrx_effects__[\"a\" /* Effect */])(), \n        __metadata('design:type', Object)\n    ], ContactEffects.prototype, \"load$\", void 0);\n    __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__ngrx_effects__[\"a\" /* Effect */])(), \n        __metadata('design:type', Object)\n    ], ContactEffects.prototype, \"update$\", void 0);\n    ContactEffects = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"])(), \n        __metadata('design:paramtypes', [(typeof (_a = typeof __WEBPACK_IMPORTED_MODULE_1__ngrx_store__[\"b\" /* Store */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_1__ngrx_store__[\"b\" /* Store */]) === 'function' && _a) || Object, (typeof (_b = typeof __WEBPACK_IMPORTED_MODULE_13__data_service__[\"a\" /* DataService */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_13__data_service__[\"a\" /* DataService */]) === 'function' && _b) || Object, (typeof (_c = typeof __WEBPACK_IMPORTED_MODULE_2__ngrx_effects__[\"b\" /* Actions */] !== 'undefined' && __WEBPACK_IMPORTED_MODULE_2__ngrx_effects__[\"b\" /* Actions */]) === 'function' && _c) || Object])\n    ], ContactEffects);\n    return ContactEffects;\n    var _a, _b, _c;\n}());\n\n\n/***/ },\n\n/***/ 1048:\n/***/ function(module, exports) {\n\nmodule.exports = \".ng-valid[required]{\\n  border-left:5px solid #42A948;\\n}\\n\\n.ng-invalid{\\n  border-left:5px solid #a94442;\\n}\\n\\n.alert{\\n  padding:15px;\\n  margin:8px 0;\\n  border:1px solid transparent;\\n  border-radius:4px;\\n}\\n.alert-danger{\\n  color:#a94442;\\n  background-color:#f2dede;\\n  border-color:#ebccd1;\\n}\\n\\n.msg{\\n  color:blue;\\n  background-color:whitesmoke;\\n  border:1px solid transparent;\\n  border-radius:4px;\\n  margin-bottom:20px;\\n}\"\n\n/***/ },\n\n/***/ 1055:\n/***/ function(module, exports) {\n\nmodule.exports = \"<h2>Contacts of {{(user$ | async).fullName()}}</h2>\\n<div *ngIf=\\\"(msg$ | async)\\\" class=\\\"msg\\\">{{(msg$ | async)}}</div>\\n\\n<form *ngIf=\\\"(contact$ | async)\\\" (ngSubmit)=\\\"onSubmit()\\\" #contactForm=\\\"ngForm\\\" connect=\\\"contacts$\\\">\\n\\t<template connectArray let-index connectArrayOf=\\\"entities\\\">\\n\\t\\t<div [ngModelGroup]=\\\"index\\\">\\n\\t\\t\\t<h3 highlight>{{ name | awesome }}</h3>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t<input ngControl ngModel type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"name\\\" #nameElement=\\\"ngModel\\\">\\n\\t\\t\\t\\t<div [hidden]=\\\"nameElement.valid\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\tName is required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<br>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!contactForm.form.valid\\\">Save</button>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"nextContact()\\\" [disabled]=\\\"!contactForm.form.valid\\\">Next Contact</button>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"newContact()\\\">New Contact</button>\\n\\t\\t</div>\\n\\t</template>\\n</form>\\n\\n\\n<!-- \\nCopyright 2016 Google Inc. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n-->\"\n\n/***/ },\n\n/***/ 986:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ngrx_effects__ = __webpack_require__(271);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__core_store_data_service__ = __webpack_require__(272);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shared_shared_module__ = __webpack_require__(173);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__contact_page__ = __webpack_require__(1008);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__contact_routing__ = __webpack_require__(1027);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__core_store_contact_contact_effects__ = __webpack_require__(1032);\n/* harmony export (binding) */ __webpack_require__.d(exports, \"ContactModule\", function() { return ContactModule; });\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\n\n\n\n\n\n\nvar ContactModule = (function () {\n    function ContactModule() {\n    }\n    ContactModule = __decorate([\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"])({\n            imports: [\n                __WEBPACK_IMPORTED_MODULE_3__shared_shared_module__[\"a\" /* SharedModule */],\n                __WEBPACK_IMPORTED_MODULE_5__contact_routing__[\"a\" /* routing */],\n                __WEBPACK_IMPORTED_MODULE_1__ngrx_effects__[\"c\" /* EffectsModule */].run(__WEBPACK_IMPORTED_MODULE_6__core_store_contact_contact_effects__[\"a\" /* ContactEffects */])\n            ],\n            declarations: [\n                __WEBPACK_IMPORTED_MODULE_4__contact_page__[\"a\" /* ContactPage */]\n            ],\n            providers: [\n                __WEBPACK_IMPORTED_MODULE_2__core_store_data_service__[\"a\" /* DataService */]\n            ]\n        }), \n        __metadata('design:paramtypes', [])\n    ], ContactModule);\n    return ContactModule;\n}());\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/ \n\n\n/***/ },\n\n/***/ 992:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = __webpack_require__(994)\nvar ieee754 = __webpack_require__(995)\nvar isArray = __webpack_require__(996)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(992).Buffer, __webpack_require__(45)))\n\n/***/ },\n\n/***/ 993:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar Observable_1 = __webpack_require__(2);\nvar withLatestFrom_1 = __webpack_require__(174);\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n/***/ },\n\n/***/ 994:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n/***/ },\n\n/***/ 995:\n/***/ function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ },\n\n/***/ 996:\n/***/ function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ },\n\n/***/ 997:\n/***/ function(module, exports) {\n\n\n\n/***/ },\n\n/***/ 998:\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(Buffer) {var __WEBPACK_AMD_DEFINE_RESULT__;//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if (true) {\n      try {\n        var _rb = __webpack_require__(997).randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (true) {\n    // Publish as AMD module\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {return uuid;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(992).Buffer))\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.18358b6cd1554c2ad26b.chunk.js","import 'rxjs/add/operator/let';\nimport {\n    Component,\n    ChangeDetectionStrategy,\n    OnInit\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs/Observable';\n\nimport * as fromRoot from '../core/store';\nimport { Contact } from '../core/store/contact/contact.model';\nimport { User } from '../core/store/user/user.model';\nimport * as contact from '../core/store/contact/contact.actions';\nimport * as layout from '../core/store/layout/layout.actions';\n\nlet uuid = require('node-uuid');\n\n@Component({\n    selector: 'app-contact',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: require('./contact.page.html'),\n    styles: [require('./contact.page.css')]\n})\nexport class ContactPage implements OnInit {\n    contacts$: Observable<Contact[]>;\n\n    msg$: Observable<string>;\n    user$: Observable<User>;\n\n    constructor(private store: Store<fromRoot.RootState>) {\n    }\n\n    ngOnInit() {\n        this.user$ = this.store.let(fromRoot.getUser);\n        this.msg$ = this.store.let(fromRoot.getMsg);\n        this.contacts$ = this.store.let(fromRoot.getContacts);\n    }\n\n    nextContact() {\n        this.store.dispatch(new contact.NextContactAction());\n    }\n\n    newContact() {\n        this.store.dispatch(new contact.AddContactAction({\n            id: uuid.v1(),\n            name: ''\n        }));\n    }\n\n    onSubmit() {\n        this.store.dispatch(new layout.SetMsgAction('Saved contact'))\n        setTimeout(() => this.store.dispatch(new layout.SetMsgAction(null)));\n    }\n\n}\n\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n\n\n// WEBPACK FOOTER //\n// /Users/Dan/work/bernierebuttals/gba/~/angular2-template-loader!/Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.ts","import { ModuleWithProviders } from '@angular/core';\nimport { RouterModule }        from '@angular/router';\n\nimport { ContactPage }    from './contact.page';\n\nexport const routing: ModuleWithProviders = RouterModule.forChild([\n  { path: '', component: ContactPage}\n]);\n\n\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n\n\n// WEBPACK FOOTER //\n// /Users/Dan/work/bernierebuttals/gba/~/angular2-template-loader!/Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.routing.ts","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/toArray';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/withLatestFrom';\nimport 'rxjs/add/operator/startWith';\n\nimport { Contact } from './contact.model';\nimport { DataService } from '../data.service';\nimport * as contact from './contact.actions';\n\n@Injectable()\nexport class ContactEffects {\n  constructor(private store: Store<Contact>,\n    private dataService: DataService,\n    private action$: Actions) { }\n\n  @Effect()\n  load$ = this.action$\n    .ofType(contact.ActionTypes.LOAD)\n    .startWith(new contact.LoadAction())\n    .switchMap(() =>\n      this.dataService.getContacts()\n        .mergeMap(fetchedContacts => Observable.from(fetchedContacts))\n        .map((fetchedContact: Contact) => new contact.LoadSuccessAction(fetchedContact))  // one action per contact\n        .catch(() => Observable.of(new contact.UpdateContactFailAction()))\n    );\n\n  @Effect()\n  update$ = this.action$\n    .ofType(contact.ActionTypes.UPDATE_CONTACT,\n    contact.ActionTypes.ADD_CONTACT)\n    .withLatestFrom(this.store.select('contacts'))\n    .switchMap(([{}, contacts]) =>\n      Observable   // first element is action, but it isn't used\n        .from(contacts.ids)\n        .filter((id: string) => contacts.entities[id].dirty)\n        .switchMap((id: string) => this.dataService.addOrUpdateContact(contacts.entities[id]))\n        .map((responseContact: Contact) => new contact.UpdateContactSuccessAction(responseContact))\n    );\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Dan/work/bernierebuttals/gba/~/angular2-template-loader!/Users/Dan/work/bernierebuttals/gba/src/app/core/store/contact/contact.effects.ts","module.exports = \".ng-valid[required]{\\n  border-left:5px solid #42A948;\\n}\\n\\n.ng-invalid{\\n  border-left:5px solid #a94442;\\n}\\n\\n.alert{\\n  padding:15px;\\n  margin:8px 0;\\n  border:1px solid transparent;\\n  border-radius:4px;\\n}\\n.alert-danger{\\n  color:#a94442;\\n  background-color:#f2dede;\\n  border-color:#ebccd1;\\n}\\n\\n.msg{\\n  color:blue;\\n  background-color:whitesmoke;\\n  border:1px solid transparent;\\n  border-radius:4px;\\n  margin-bottom:20px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.css\n// module id = 1048\n// module chunks = 3","module.exports = \"<h2>Contacts of {{(user$ | async).fullName()}}</h2>\\n<div *ngIf=\\\"(msg$ | async)\\\" class=\\\"msg\\\">{{(msg$ | async)}}</div>\\n\\n<form *ngIf=\\\"(contact$ | async)\\\" (ngSubmit)=\\\"onSubmit()\\\" #contactForm=\\\"ngForm\\\" connect=\\\"contacts$\\\">\\n\\t<template connectArray let-index connectArrayOf=\\\"entities\\\">\\n\\t\\t<div [ngModelGroup]=\\\"index\\\">\\n\\t\\t\\t<h3 highlight>{{ name | awesome }}</h3>\\n\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t<input ngControl ngModel type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"name\\\" #nameElement=\\\"ngModel\\\">\\n\\t\\t\\t\\t<div [hidden]=\\\"nameElement.valid\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t\\t\\tName is required\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<br>\\n\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!contactForm.form.valid\\\">Save</button>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"nextContact()\\\" [disabled]=\\\"!contactForm.form.valid\\\">Next Contact</button>\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"newContact()\\\">New Contact</button>\\n\\t\\t</div>\\n\\t</template>\\n</form>\\n\\n\\n<!-- \\nCopyright 2016 Google Inc. All Rights Reserved.\\nUse of this source code is governed by an MIT-style license that\\ncan be found in the LICENSE file at http://angular.io/license\\n-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.page.html\n// module id = 1055\n// module chunks = 3","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { DataService } from '../core/store/data.service';\nimport { SharedModule } from '../shared/shared.module';\nimport { ContactPage } from './contact.page';\nimport { routing } from './contact.routing';\nimport { ContactEffects } from '../core/store/contact/contact.effects';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    routing,\n    EffectsModule.run(ContactEffects)\n  ],\n  declarations: [\n    ContactPage\n  ],\n  providers: [\n    DataService\n  ]\n})\nexport class ContactModule { }\n\n\n/*\nCopyright 2016 Google Inc. All Rights Reserved.\nUse of this source code is governed by an MIT-style license that\ncan be found in the LICENSE file at http://angular.io/license\n*/\n\n\n// WEBPACK FOOTER //\n// /Users/Dan/work/bernierebuttals/gba/~/angular2-template-loader!/Users/Dan/work/bernierebuttals/gba/src/app/contact/contact.module.ts","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/buffer/index.js\n// module id = 992\n// module chunks = 0 2 3","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/rxjs/add/operator/withLatestFrom.js\n// module id = 993\n// module chunks = 2 3 4 5","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/base64-js/index.js\n// module id = 994\n// module chunks = 0 2 3","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/ieee754/index.js\n// module id = 995\n// module chunks = 0 2 3","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/isarray/index.js\n// module id = 996\n// module chunks = 0 2 3","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n/*global window, require, define */\n(function(_window) {\n  'use strict';\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng, _mathRNG, _nodeRNG, _whatwgRNG, _previousRoot;\n\n  function setupBrowser() {\n    // Allow for MSIE11 msCrypto\n    var _crypto = _window.crypto || _window.msCrypto;\n\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n      //\n      // Moderately fast, high quality\n      try {\n        var _rnds8 = new Uint8Array(16);\n        _whatwgRNG = _rng = function whatwgRNG() {\n          _crypto.getRandomValues(_rnds8);\n          return _rnds8;\n        };\n        _rng();\n      } catch(e) {}\n    }\n\n    if (!_rng) {\n      // Math.random()-based (RNG)\n      //\n      // If all else fails, use Math.random().  It's fast, but is of unspecified\n      // quality.\n      var  _rnds = new Array(16);\n      _mathRNG = _rng = function() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 0x03) === 0) { r = Math.random() * 0x100000000; }\n          _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n        }\n\n        return _rnds;\n      };\n      if ('undefined' !== typeof console && console.warn) {\n        console.warn(\"[SECURITY] node-uuid: crypto not usable, falling back to insecure Math.random()\");\n      }\n    }\n  }\n\n  function setupNode() {\n    // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html\n    //\n    // Moderately fast, high quality\n    if ('function' === typeof require) {\n      try {\n        var _rb = require('crypto').randomBytes;\n        _nodeRNG = _rng = _rb && function() {return _rb(16);};\n        _rng();\n      } catch(e) {}\n    }\n  }\n\n  if (_window) {\n    setupBrowser();\n  } else {\n    setupNode();\n  }\n\n  // Buffer class to use\n  var BufferClass = ('function' === typeof Buffer) ? Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = (options.clockseq != null) ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = (options.msecs != null) ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = (options.nsecs != null) ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) === 'string') {\n      buf = (options === 'binary') ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  var uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n  uuid._rng = _rng;\n  uuid._mathRNG = _mathRNG;\n  uuid._nodeRNG = _nodeRNG;\n  uuid._whatwgRNG = _whatwgRNG;\n\n  if (('undefined' !== typeof module) && module.exports) {\n    // Publish as node.js module\n    module.exports = uuid;\n  } else if (typeof define === 'function' && define.amd) {\n    // Publish as AMD module\n    define(function() {return uuid;});\n\n\n  } else {\n    // Publish as global (in browsers)\n    _previousRoot = _window.uuid;\n\n    // **`noConflict()` - (browser only) to reset global 'uuid' var**\n    uuid.noConflict = function() {\n      _window.uuid = _previousRoot;\n      return uuid;\n    };\n\n    _window.uuid = uuid;\n  }\n})('undefined' !== typeof window ? window : null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Dan/work/bernierebuttals/gba/~/node-uuid/uuid.js\n// module id = 998\n// module chunks = 0 2 3"],"sourceRoot":""}